PROCEDURE "MISSIONCONTROL"."hpl.missioncontrol.procedures::get_mission_time_motion" ( 
		IN ip_missionid NVARCHAR(6), IN ip_vehicleid NVARCHAR(3), IN ip_pilotid NVARCHAR(3),
		out ex_motion_seconds MISSIONCONTROL."hpl.missioncontrol.data::MC.Procedures.tt_seconds"  ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA <default_schema_name>
	READS SQL DATA AS
BEGIN
 	declare lvFirstThrustTimestamp 	timestamp default null;
 	declare lvThrustTimestamp 		timestamp default null; 	
 	declare lvStopTimestamp  		timestamp default null;
    declare lvSecondsBetween  		integer;
    declare lvTotalSecondsBetween  	integer default 0;
	
	declare CURSOR c_mission FOR
 		select missionlogid, loggedat, ts, messageid_messageid, throttle 
 	 		from "_SYS_BIC"."hpl.missioncontrol.models/AT_MISSION_LOG"
			where missionid_missionid = :ip_missionid and
    			  vehicleid_vehicleid = :ip_vehicleid and 
    		      pilotid_pilotid     = :ip_pilotid   and
			      (messageid_messageid = 'STP' or (messageid_messageid = 'THR' and throttle IS NOT NULL))
			order by loggedat, ts;
 	 
    
	FOR cur_row as c_mission DO
		if cur_row.messageid_messageid = 'THR' then 
			lvThrustTimestamp := cur_row.TS;
		end if;
  		if cur_row.messageid_messageid = 'THR' and lvFirstThrustTimestamp is null then  			
  			lvFirstThrustTimestamp := cur_row.TS;
  		end if;
  		if lvFirstThrustTimestamp is not null and cur_row.messageid_messageid = 'STP' then
  			lvStopTimestamp := cur_row.TS;
  		end if;
  		if lvFirstThrustTimestamp is not null and lvStopTimestamp is not null then
  		    select seconds_between (lvFirstThrustTimestamp, lvStopTimestamp) into lvSecondsBetween from dummy;
  		    lvTotalSecondsBetween  := lvTotalSecondsBetween + lvSecondsBetween;
  		    lvStopTimestamp  		:= null;
  		    lvFirstThrustTimestamp 	:= null;
  		    lvThrustTimestamp 		:= null;  		    
  		end if;  		
	END FOR;
	
	
	if lvFirstThrustTimestamp is not null then 
	   select seconds_between (lvFirstThrustTimestamp, lvThrustTimestamp) into lvSecondsBetween from dummy;
	   lvTotalSecondsBetween  := lvTotalSecondsBetween + lvSecondsBetween;
	end if;
		
	ex_motion_seconds = select 1 as "IDX", 'MOTION' AS "LABEL", lvTotalSecondsBetween as "SECONDS" from dummy;	
	
END;