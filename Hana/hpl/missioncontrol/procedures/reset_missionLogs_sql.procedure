<?xml version="1.0" encoding="UTF-8"?>
<UDE:Procedure xmlns:UDE="http://www.sap.com/ndb/SQLCoreModelUDE.ecore" xmlns:DataTypes="http://www.sap.com/ndb/SQLCoreModelDataTypes.ecore" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="reset_missionLogs_sql" schemaVersion="2" procedureType="procedure" runWithInvokerPrivileges="true" language="SQLSCRIPT" accessMode="ReadWrite">
<descriptions defaultDescription=""/>
<metadata changedAt ="2014-02-04 18:16:33.413" createdAt="2014-01-30 10:16:56.009"/>
<origin/>
<schema id="_SYS_BIC"/>
<definition>        
	--DEFAULT SCHEMA &lt;schema&gt;

BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/

 	delete from &quot;MISSIONCONTROL&quot;.&quot;hpl.missioncontrol.data::missionKeyFrame&quot;; 
 	delete from &quot;MISSIONCONTROL&quot;.&quot;hpl.missioncontrol.data::mission&quot;;
 	delete from &quot;MISSIONCONTROL&quot;.&quot;hpl.missioncontrol.data::missionCockpitLog&quot;;
	delete from &quot;MISSIONCONTROL&quot;.&quot;hpl.missioncontrol.data::missionDriveLog&quot;;	
 	delete from &quot;MISSIONCONTROL&quot;.&quot;hpl.missioncontrol.data::missionNavigationLog&quot;;
 	delete from &quot;MISSIONCONTROL&quot;.&quot;hpl.missioncontrol.data::missionNotifyLog&quot;;
 	delete from &quot;MISSIONCONTROL&quot;.&quot;hpl.missioncontrol.data::missionPowerLog&quot;;
 	delete from &quot;MISSIONCONTROL&quot;.&quot;hpl.missioncontrol.data::missionSensorLog&quot;; 	
  
END;</definition>
<defaultSchema schemaName="SYSTEM"/>
<localTableType>/*
You can create new table types and use them as input and output parameters in a procedure.
The table types must be defined using SQL syntax, for example:
CREATE TYPE &lt;Type Name&gt; AS TABLE (&lt;Field Name1&gt; &lt;Field Type1&gt;, &lt;Field Name2&gt; &lt;Field Type2&gt;,...);
*/
</localTableType>
<header>CREATE PROCEDURE reset_missionLogs_sql ( ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER AS</header>
</UDE:Procedure>